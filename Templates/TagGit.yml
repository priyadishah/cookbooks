parameters:
  - name: stageName
    type: string
    default: none
  - name: stageDisplayname
    type: string
    default: none
  - name: runStage
    type: boolean
    default: true
  - name: jobName
    type: string
    default: none
  - name: jobDisplayname
    type: string
    default: none
  - name: stackname
    type: string
    default: none
  - name: BaseImageName
    type: string
    default: none    
  - name: vmImage
    type: string
    default: windows-2019
  - name: jobcondition
    type: string
    default: ''
  - name: jobDemand
    type: string
    default: ''
  - name: dependsOn
    default: []  

stages:
  - stage: ${{ parameters.stageName }}
    condition: ${{ parameters.runStage }}
    dependsOn: ${{ parameters.dependsOn }}
    displayName: ${{ parameters.stageDisplayname }}
    jobs:
    - job: ${{ parameters.jobName }}
      timeoutInMinutes: 0
      cancelTimeoutInMinutes: 1
      displayName: ${{ parameters.jobDisplayname }}

      variables:
        TemplateS3Namespace: '/image-cd-pipeline'

      pool:
        vmImage: ${{ parameters.vmImage }}
        demands: ${{ parameters.jobDemand }}

      steps:
      - download: _Build Image Release Artefacts
        displayName: Download artifacts from Build Image Release Artefacts

      - checkout: self

      - checkout: _lansa_aws-templates
        displayName: Checkout Lansa AWS Templates
        path: "s/_lansa_aws-templates"

      - checkout: _robe070_cookbooks
        displayName: Checkout Rob cookbooks
        path: "s/_robe070_cookbooks"

      - task: AWSPowerShellModuleScript@1
        name: Gate
        displayName: 'Artifact Check: Set Gate Variable'
        inputs:
          awsCredentials: AzureDevOps
          regionName: 'ap-southeast-2'
          arguments: '-BaseImageName ''$(System.JobDisplayName)'' -stackname ''$(System.StageDisplayName)-$(System.JobDisplayName)'''
          filePath: "$(System.DefaultWorkingDirectory)/_lansa_aws-templates/scripts/SetGateVariableCloudAccountId.ps1"

      - pwsh: |
          # Print the Gate variables.
          Write-Host "Gate.IsEnabled: $(Gate.IsEnabled); Gate.ImageID: $(Gate.ImageID); Gate.version:$(Gate.version); Gate.stack:$(Gate.stack)"| Out-Default
        displayName: 'Artifact Check : Output Gate Variable'

      - task: PowerShell@2
        displayName: 'Write access to Git Repo (Divakshi/cookbooks)'
        inputs:
          targetType: filePath
          filePath: './$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitRepoWriteAccess.ps1'
          arguments: '-GitBranch ''$(CookbooksBranch)'' -GitURL ''https://$(GitLansaAwsTemplatesPAT):x-oauth-basic@$(GitCookBooksGitHubName)'' -GitUserEmail ''$(GitRepoUserEmail)'' -GitUserName ''$(GitRepoUserName)'' -GitRepoName ''$(CookbooksSourceAlias)'''                  
          pwsh: true

      - task: PowerShell@2
        displayName: 'Tag cookbooks repo'
        inputs:
          targetType: filePath
          filePath: './$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitTag.ps1'
          arguments: '-GitRepoName ''$(CookbooksSourceAlias)'' -Tags ''AWSImage-Bld-$(Build.BuildId)-$(Release.ReleaseName)-$(Gate.version)'''            
          pwsh: true